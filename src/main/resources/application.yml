spring:
  datasource:
    url: ${RDS_URL}
    username: ${RDS_USERNAME}
    password: ${RDS_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  sql:
    init:
      mode: never
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL8Dialect
        show_sql: true
        format_sql: true
        use_sql_comments: true
        hbm2ddl:
          auto: update
        default_batch_fetch_size: 1000
#  redis:
#    host: ${REDIS_HOST}
#    port: ${REDIS_PORT}
  mvc:
    pathmatch:
      matching-strategy: ant_path_matcher

#  security:
#    oauth2:
#      client:
#        registration:
#          google:
#            client-id: ${GOOGLE_ID}
#            client-secret: ${GOOGLE_SECRET}
#            redirect-uri: "https://dev.nangmancat.shop/login/oauth2/code/google"
#            authorization-grant-type: authorization_code
#            scope: email
#          kakao:
#            client-id: ${KAKAO_ID}
#            redirect-uri: "https://dev.nangmancat.shop/login/oauth2/code/kakao"
#            client-authentication-method: POST
#            authorization-grant-type: authorization_code
#            scope: profile_nickname, account_email
#        provider:
#          kakao:
#            authorization_uri: https://kauth.kakao.com/oauth/authorize
#            token_uri: https://kauth.kakao.com/oauth/token
#            user-info-uri: https://kapi.kakao.com/v2/user/me
#            user_name_attribute: id
  jwt:
    secret: ${TOKEN_SECRET}


cloud:
  aws:
    s3:
      bucket: romantic-cat-bucket
    region:
      static: ap-northeast-2
    stack:
      auto: false
    credentials:
      accessKey: ${ACCESSKEY}
      secretKey: ${SECRETKEY}

spring.servlet.multipart.max-file-size: 100MB
spring.servlet.multipart.max-request-size: 100MB
